<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        引用类型的自动注入：spring 框架根据某些规则可以给引用类型赋值。
        使用的规则常用的是byName, byType.
        1.byName(按名称注入): java 类中引用类型的属性名和spring容器中(配置文件)<bean> 的id名称一样，
                             且数据类型是一致的这样容器中的bean，spring能够赋值给引用类型。
        语法：
        <bean id="xx" class="com.xx...">
            简单类型属性赋值
        </bean>

        2.byType(按类型注入): java 类中引用类型的数据类型和spring容器中（配置文件）<bean> 的class属性
                             是同源关系的，这样的bean能够赋值给引用类型
                   同源就是一类的意思：
                   1、Java类中引用类型的数据类型和bean的class值是一样的
                   2、Java类中引用类型的数据类型和bean的class值是父子关系的
                   3、Java类中引用类型的数据类型和bean的class值是接口和实现类关系的
        语法：
        <bean id="xx" class="com.xx...">
            简单类型属性赋值
        </bean>
    -->

    <!--byName-->


    <bean id="student" class="com.thorine.ba04.Student" autowire="byType">
        <property name="name" value="张三" />
        <property name="age" value="22" />
    </bean>

    <bean id="mySchool" class="com.thorine.ba04.School"> <!-- 若为 byName, 则id为school -->
        <property name="name" value="北京大学111111111"/>
        <property name="address" value="北京"/>
    </bean>
</beans>